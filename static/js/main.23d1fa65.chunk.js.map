{"version":3,"sources":["components/custom/MyTab.js","components/custom/MyTabs.js","components/account/LogIn.js","components/account/SignUp.js","components/account/LoginTabsLayout.js","components/App.js","serviceWorker.js","index.js"],"names":["MyTab","onClick","_this$props","_this","props","label","this","_this$props2","activeTab","className","react_default","a","createElement","mdbreact_esm","to","Component","MyTabs","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickTabItem","tab","setState","state","children","map","child","custom_MyTab","key","LogInForm","icon","group","type","validate","error","success","href","SignUpForm","LoginTabsLayout","custom_MyTabs","LogIn","SignUp","App","BrowserRouter","account_LoginTabsLayout","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23d1fa65.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { MDBNavLink } from \"mdbreact\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MyTab extends Component {\r\n  static propTypes = {\r\n    activeTab: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n  };\r\n\r\n  onClick = () => {\r\n    const { label, onClick } = this.props;\r\n    onClick(label);\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClick,\r\n      props: {\r\n        activeTab,\r\n        label,\r\n      },\r\n    } = this;\r\n\r\n    let className = 'tab-list-item';\r\n\r\n    if (activeTab === label) {\r\n      className += ' active';\r\n    }\r\n\r\n    return (\r\n      <MDBNavLink to=\"#!\" className={className} onClick={onClick}>\r\n        {label}\r\n      </MDBNavLink>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyTab;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MDBNav, MDBContainer } from \"mdbreact\";\r\nimport MyTab from './MyTab'\r\n\r\nclass MyTabs extends Component {\r\n  static propTypes = {\r\n    children: PropTypes.instanceOf(Array).isRequired,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeTab: this.props.children[0].props.label,\r\n    };\r\n  }\r\n\r\n  onClickTabItem = (tab) => {\r\n    this.setState({ activeTab: tab });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onClickTabItem,\r\n      props: {\r\n        children,\r\n      },\r\n      state: {\r\n        activeTab,\r\n      }\r\n    } = this;\r\n\r\n    return (\r\n      <div>\r\n        <MDBNav className=\"tab-list\">\r\n          {children.map((child) => {\r\n            const { label } = child.props;\r\n            return (\r\n                <MyTab\r\n                  activeTab={activeTab}\r\n                  key={label}\r\n                  label={label}\r\n                  onClick={onClickTabItem}\r\n                />\r\n              );\r\n            })}\r\n        </MDBNav>\r\n        <MDBContainer>\r\n          {children.map((child) => {\r\n            if (child.props.label !== activeTab) return undefined;\r\n            return child.props.children;\r\n          })}\r\n        </MDBContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyTabs;","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nconst LogInForm = () => {\r\n  return (\r\n    <MDBContainer className=\"formContainer\">\r\n      <MDBRow>\r\n        <MDBCol>\r\n          <form>\r\n            <p className=\"h5 text-center py-4\">Log in</p>\r\n            <div className=\"grey-text\">\r\n              <MDBInput\r\n                label=\"Type your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n              />\r\n              <MDBInput\r\n                label=\"Type your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n              />\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <MDBBtn>Login</MDBBtn>\r\n                <p className=\"font-small blue-text d-flex justify-content-end pb-3\">\r\n                  Forgot\r\n                  <a href=\"#!\" className=\"ml-1\">\r\n                    Password?\r\n                  </a>\r\n                </p>\r\n                <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                  Not a member?\r\n                  <a href=\"#!\" className=\"blue-text ml-1\">\r\n\r\n                    Sign Up\r\n                  </a>\r\n                </p>\r\n            </div>\r\n          </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default LogInForm;","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\n\r\nconst SignUpForm = () => {\r\n  return (\r\n    <MDBContainer className=\"formContainer\">\r\n      <MDBRow>\r\n        <MDBCol>\r\n          <form>\r\n            <p className=\"h5 text-center py-4\">Sign up</p>\r\n            <div className=\"grey-text\">\r\n                <MDBInput\r\n                label=\"Your name\"\r\n                icon=\"user\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                />\r\n                <MDBInput\r\n                label=\"Your email\"\r\n                icon=\"envelope\"\r\n                group\r\n                type=\"email\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                />\r\n                <MDBInput\r\n                label=\"Confirm your email\"\r\n                icon=\"exclamation-triangle\"\r\n                group\r\n                type=\"text\"\r\n                validate\r\n                error=\"wrong\"\r\n                success=\"right\"\r\n                />\r\n                <MDBInput\r\n                label=\"Your password\"\r\n                icon=\"lock\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                />\r\n            </div>\r\n            <div className=\"text-center py-4 mt-3\">\r\n                <MDBBtn type=\"submit\">\r\n                  Sign Up\r\n                </MDBBtn>\r\n            </div>\r\n            </form>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer>\r\n  );\r\n};\r\n\r\nexport default SignUpForm;","import React, { Component } from \"react\";\r\nimport MyTabs from '../custom/MyTabs';\r\nimport LogInForm from './LogIn';\r\nimport SignUpForm from './SignUp';\r\n\r\n\r\nclass LoginTabsLayout extends Component {\r\n\r\nrender() {\r\n  return (\r\n      <MyTabs>\r\n        <div label=\"Log In\">\r\n          <LogInForm/>\r\n        </div>\r\n        <div label=\"Sign Up\">\r\n          <SignUpForm/>\r\n        </div>\r\n      </MyTabs>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginTabsLayout;","import React, { Component } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { MDBContainer } from \"mdbreact\";\r\nimport LoginTabsLayout from './account/LoginTabsLayout';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <MDBContainer className=\"App\">\r\n          <LoginTabsLayout />\r\n        </MDBContainer>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// MDBReact\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport './assets/scss/mdb.scss';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}